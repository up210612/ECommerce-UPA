version: '3.8'

services:

  frontend:

    build: frontend

    ports:

      - "3000:${FRONTEND_PORT}"

    depends_on:
      - backend

  backend:

    build: backend

    ports:

      - "8080:${BACKEND_PORT}"

    depends_on:
      - db

    environment:
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
      MYSQL_HOST: db
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_PORT: ${MYSQL_PORT}
    entrypoint: ["./wait-for-it.sh", "db", "--", "java", "-jar", "/app.jar"]
    # entrypoint: ["java", "-jar", "/app.jar"]

  db:
    image: mysql:5.7
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
    ports:
      - "3306:${MYSQL_PORT}"
    volumes:
      - ./db/mysql-init/init.sql:/docker-entrypoint-initdb.d/init.sql
      - mysql-data:/var/lib/mysql
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-p${MYSQL_ROOT_PASSWORD}"]
      interval: 10s
      timeout: 5s
      retries: 5
volumes:
  mysql-data:
    